
# Введение
Предметно-ориентированное проектирование (domain driven design, DDD) дает множество преимуществ при разработке и дальнейшей поддержке продукта.
Если вы умеете пользоватьсярсеналом DDD, то вы определенно находитесь в более выгодном положении по сравнению с остальными. 
Не всегды, впрочем, очевидно как реализовать то или иной аспект DDD в рамках той или иной технологии.

В этой статье мы попробуем разобраться, как реализовать один из фундаментальных инструментов DDD - события предметной области - в Spring. Это не статья про Event Sourcing (для тех, кто понимает о чем речь). Мы сначала рассмотрим, что такое композиты (aggregates) в DDD и как добиться непротиворечивости данных между неколькини композитами.
Для непротиворечивости данных между неколькими композитами используется отложенная консистентность. 
Дальше пойдет речь о том, как реализовать отложенную консистентность в Spring Framework с использованием amqp и событий предметной области.

О чем этот пост?
* реализация событий предметной области в Spring
* amqp

DDD - что это такое? Максимально приближенное к предметной области моделирование с помощью доступных средств языка программирования и сопутсствующих технологий. 
Основные инструменты DDD - это агрегаты и события. Первые отвечают за непротиворечивость данных во всех операциях предметной области.
Агрегаты обестпечивают выполнения т.н. инвариантов модели. Например, при добавлении товара общая стоимость будущего заказа должна равняться сумме цен товаров в корзине. 